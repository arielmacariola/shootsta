{"ast":null,"code":"var _jsxFileName = \"/Users/arielmac/projects/shootsta/app/src/component/upload.jsx\";\nimport React, { Component } from \"react\";\nimport { apiHost } from \"../utils/restAPI\";\nimport { Link } from \"react-router-dom\";\n\nconst axios = require(\"axios\");\n\nclass Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showFormMessage: false,\n      formSuccess: false,\n      formMessage: \"\"\n    };\n\n    this.getFormErrorMessage = msg => {\n      this.setState({\n        formSuccess: true,\n        showFormMessage: true,\n        formMessage: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"alert-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Upload Successful!\"), msg, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, data.map((file, index) => React.createElement(\"span\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, file.originalname, \" \"))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"See latest list of\", \" \", React.createElement(Link, {\n          to: \"/\",\n          className: \"alert-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"videos\")))\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formData = new FormData();\n      let inputVideos = document.querySelector(\"#inputVideos\");\n\n      for (var i = 0; i < inputVideos.files.length; i++) {\n        let file = inputVideos.files[i];\n        formData.append(\"video\", file);\n      } // Send a POST request\n\n\n      axios.post(apiHost + \"/api/videos\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        // handle success\n        const {\n          data,\n          status\n        } = response;\n\n        if (status === 200) {} // Reset the form\n\n\n        document.getElementById(\"uploadForm\").reset();\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          formSuccess: false,\n          showFormMessage: true,\n          formMessage: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: \"alert-heading\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Form Error!\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, error.data))\n        });\n      });\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        inputVideos: e\n      });\n    };\n\n    this.displayFormMessage = () => {\n      const formMessageClass = this.state.formSuccess ? \"alert alert-success\" : \"alert alert-danger\";\n\n      if (this.state.showFormMessage) {\n        return React.createElement(\"div\", {\n          className: formMessageClass,\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, this.state.formMessage);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.displayFormMessage(), React.createElement(\"form\", {\n      id: \"uploadForm\",\n      encType: \"multipart/form-data\",\n      action: this.apiEndPoint,\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputUploadVideos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Choose video file/s to upload:\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"inputVideos\",\n      id: \"inputVideos\",\n      className: \"form-control-file form-control-md\",\n      onChange: e => this.inputChangeHandler(e.target.files),\n      accept: \"video/*\",\n      multiple: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/arielmac/projects/shootsta/app/src/component/upload.jsx"],"names":["React","Component","apiHost","Link","axios","require","Upload","state","showFormMessage","formSuccess","formMessage","getFormErrorMessage","msg","setState","data","map","file","index","originalname","handleSubmit","e","preventDefault","formData","FormData","inputVideos","document","querySelector","i","files","length","append","post","headers","then","response","status","getElementById","reset","catch","error","console","log","inputChangeHandler","displayFormMessage","formMessageClass","render","apiEndPoint","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { apiHost } from \"../utils/restAPI\";\nimport { Link } from \"react-router-dom\";\nconst axios = require(\"axios\");\n\nclass Upload extends Component {\n  state = {\n    showFormMessage: false,\n    formSuccess: false,\n    formMessage: \"\"\n  };\n\n  getFormErrorMessage = msg => {\n    this.setState({\n      formSuccess: true,\n      showFormMessage: true,\n      formMessage: (\n        <React.Fragment>\n          <h4 className=\"alert-heading\">Upload Successful!</h4>\n          {msg}\n          <p>\n            {data.map((file, index) => (\n              <span key={index}>{file.originalname} </span>\n            ))}\n          </p>\n          <hr />\n          <p className=\"mb-0\">\n            See latest list of{\" \"}\n            <Link to=\"/\" className=\"alert-link\">\n              videos\n            </Link>\n          </p>\n        </React.Fragment>\n      )\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    let inputVideos = document.querySelector(\"#inputVideos\");\n\n    for (var i = 0; i < inputVideos.files.length; i++) {\n      let file = inputVideos.files[i];\n      formData.append(\"video\", file);\n    }\n\n    // Send a POST request\n    axios\n      .post(apiHost + \"/api/videos\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(response => {\n        // handle success\n        const { data, status } = response;\n        if (status === 200) {\n        }\n\n        // Reset the form\n        document.getElementById(\"uploadForm\").reset();\n      })\n      .catch(error => {\n        console.log(error);\n\n        this.setState({\n          formSuccess: false,\n          showFormMessage: true,\n          formMessage: (\n            <React.Fragment>\n              <h4 className=\"alert-heading\">Form Error!</h4>\n              <p>{error.data}</p>\n            </React.Fragment>\n          )\n        });\n      });\n  };\n\n  inputChangeHandler = e => {\n    this.setState({\n      inputVideos: e\n    });\n  };\n\n  displayFormMessage = () => {\n    const formMessageClass = this.state.formSuccess\n      ? \"alert alert-success\"\n      : \"alert alert-danger\";\n\n    if (this.state.showFormMessage) {\n      return (\n        <div className={formMessageClass} role=\"alert\">\n          {this.state.formMessage}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"form-box\">\n        {this.displayFormMessage()}\n        <form\n          id=\"uploadForm\"\n          encType=\"multipart/form-data\"\n          action={this.apiEndPoint}\n          method=\"post\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"inputUploadVideos\">\n              Choose video file/s to upload:\n            </label>\n            <input\n              type=\"file\"\n              name=\"inputVideos\"\n              id=\"inputVideos\"\n              className=\"form-control-file form-control-md\"\n              onChange={e => this.inputChangeHandler(e.target.files)}\n              accept=\"video/*\"\n              multiple\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}