{"ast":null,"code":"var _jsxFileName = \"/Users/arielmac/projects/shootsta/app/src/component/upload.jsx\";\nimport React, { Component } from \"react\";\nimport { apiHost } from \"../utils/restAPI\";\nimport { Link } from \"react-router-dom\";\n\nconst axios = require(\"axios\");\n\nclass Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showFormMessage: false,\n      formSuccess: false,\n      formMessage: \"\"\n    };\n\n    this.getFormMessage = (isSuccessful, msg) => {\n      this.setState({\n        formSuccess: isSuccessful,\n        showFormMessage: true,\n        formMessage: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"alert-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, isSuccessful ? \"Upload Successful\" : \"Form Error\"), \" \", msg)\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formData = new FormData();\n      let inputVideos = document.querySelector(\"#inputVideos\");\n\n      for (var i = 0; i < inputVideos.files.length; i++) {\n        let file = inputVideos.files[i];\n        formData.append(\"video\", file);\n      } // Send a POST request\n\n\n      axios.post(apiHost + \"/api/videos\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        // handle success\n        const {\n          data,\n          status\n        } = response;\n\n        if (status === 200) {\n          let isSuccessful = true;\n          let msg = React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, data.map((file, index) => React.createElement(\"span\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, file.originalname, \" \"))), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"mb-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"See latest list of\", \" \", React.createElement(Link, {\n            to: \"/\",\n            className: \"alert-link\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"videos\")));\n          this.getFormMessage(isSuccessful, msg);\n        } else {\n          let isSuccessful = false;\n          let msg = React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Something went wrong!\");\n          this.getFormMessage(isSuccessful, msg);\n        } // Reset the form\n\n\n        document.getElementById(\"uploadForm\").reset();\n      }).catch(error => {\n        let isSuccessful = false;\n        let msg = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Something went wrong!\");\n        this.getFormMessage(isSuccessful, msg);\n      });\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        showFormMessage: false\n      });\n    };\n\n    this.displayFormMessage = () => {\n      const formMessageClass = this.state.formSuccess ? \"alert alert-success\" : \"alert alert-danger\";\n\n      if (this.state.showFormMessage) {\n        return React.createElement(\"div\", {\n          className: formMessageClass,\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, this.state.formMessage);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Upload Video\"), React.createElement(\"div\", {\n      className: \"form-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.displayFormMessage(), React.createElement(\"form\", {\n      id: \"uploadForm\",\n      encType: \"multipart/form-data\",\n      action: this.apiEndPoint,\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputUploadVideos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Choose video file/s to upload:\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"inputVideos\",\n      id: \"inputVideos\",\n      className: \"form-control-file form-control-md\",\n      onChange: e => this.inputChangeHandler(),\n      accept: \"video/*\",\n      multiple: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/arielmac/projects/shootsta/app/src/component/upload.jsx"],"names":["React","Component","apiHost","Link","axios","require","Upload","state","showFormMessage","formSuccess","formMessage","getFormMessage","isSuccessful","msg","setState","handleSubmit","e","preventDefault","formData","FormData","inputVideos","document","querySelector","i","files","length","file","append","post","headers","then","response","data","status","map","index","originalname","getElementById","reset","catch","error","inputChangeHandler","displayFormMessage","formMessageClass","render","apiEndPoint"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { apiHost } from \"../utils/restAPI\";\nimport { Link } from \"react-router-dom\";\nconst axios = require(\"axios\");\n\nclass Upload extends Component {\n  state = {\n    showFormMessage: false,\n    formSuccess: false,\n    formMessage: \"\"\n  };\n\n  getFormMessage = (isSuccessful, msg) => {\n    this.setState({\n      formSuccess: isSuccessful,\n      showFormMessage: true,\n      formMessage: (\n        <React.Fragment>\n          <h4 className=\"alert-heading\">\n            {isSuccessful ? \"Upload Successful\" : \"Form Error\"}\n          </h4>{\" \"}\n          {msg}\n        </React.Fragment>\n      )\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    let inputVideos = document.querySelector(\"#inputVideos\");\n\n    for (var i = 0; i < inputVideos.files.length; i++) {\n      let file = inputVideos.files[i];\n      formData.append(\"video\", file);\n    }\n\n    // Send a POST request\n    axios\n      .post(apiHost + \"/api/videos\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(response => {\n        // handle success\n        const { data, status } = response;\n        if (status === 200) {\n          let isSuccessful = true;\n          let msg = (\n            <React.Fragment>\n              <p>\n                {data.map((file, index) => (\n                  <span key={index}>{file.originalname} </span>\n                ))}\n              </p>\n              <hr />\n              <p className=\"mb-0\">\n                See latest list of{\" \"}\n                <Link to=\"/\" className=\"alert-link\">\n                  videos\n                </Link>\n              </p>\n            </React.Fragment>\n          );\n\n          this.getFormMessage(isSuccessful, msg);\n        } else {\n          let isSuccessful = false;\n          let msg = <p>Something went wrong!</p>;\n\n          this.getFormMessage(isSuccessful, msg);\n        }\n\n        // Reset the form\n        document.getElementById(\"uploadForm\").reset();\n      })\n      .catch(error => {\n        let isSuccessful = false;\n        let msg = <p>Something went wrong!</p>;\n\n        this.getFormMessage(isSuccessful, msg);\n      });\n  };\n\n  inputChangeHandler = e => {\n    this.setState({\n      showFormMessage: false\n    });\n  };\n\n  displayFormMessage = () => {\n    const formMessageClass = this.state.formSuccess\n      ? \"alert alert-success\"\n      : \"alert alert-danger\";\n\n    if (this.state.showFormMessage) {\n      return (\n        <div className={formMessageClass} role=\"alert\">\n          {this.state.formMessage}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"page-title\">Upload Video</h2>\n        <div className=\"form-box\">\n          {this.displayFormMessage()}\n          <form\n            id=\"uploadForm\"\n            encType=\"multipart/form-data\"\n            action={this.apiEndPoint}\n            method=\"post\"\n            onSubmit={this.handleSubmit}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"inputUploadVideos\">\n                Choose video file/s to upload:\n              </label>\n              <input\n                type=\"file\"\n                name=\"inputVideos\"\n                id=\"inputVideos\"\n                className=\"form-control-file form-control-md\"\n                onChange={e => this.inputChangeHandler()}\n                accept=\"video/*\"\n                multiple\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}